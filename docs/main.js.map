{"version":3,"sources":["./src/app/services/users.service.ts","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/environments/environment.ts","./src/app/single-todo/single-todo.component.html","./src/app/single-todo/single-todo.component.ts","./src/app/users/add-user/add-user.component.ts","./src/app/users/add-user/add-user.component.html","./src/app/todo/todo.component.html","./src/app/todo/todo.component.ts","./src/app/models/todo.model.ts","./src/app/models/address.model.ts","./src/app/todo/add-todo/add-todo.component.ts","./src/app/todo/add-todo/add-todo.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/contact/contact.component.ts","./src/app/contact/contact.component.html","./src/app/header/header.component.ts","./src/app/header/header.component.html","./src/app/models/user.models.ts","./src/app/not-found/not-found.component.ts","./src/app/not-found/not-found.component.html","./src/app/users/users.component.html","./src/app/users/users.component.ts","./src/app/services/todo.service.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { User } from '../models/user.models';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UsersService {\n\n  users: User[] = [];\n  usersSub = new Subject<User[]>();\n\n  constructor() { }\n\n  emitUsers(): void {\n    this.usersSub.next(this.users);\n  }\n  addUser(user: User): void{\n    this.users.push(user);\n    this.emitUsers();\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>home works!</p>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","\n<p *ngIf=\"!todo\">{{ error | json }}</p>\n<a type=\"button\" class=\"btn btn-primary\" routerLink=\"/todos\">Retour</a>\n\n<div *ngIf=\"todo\" class=\"card\" style=\"width: 18rem;\">\n  <img [src]=\"todo.image\" class=\"card-img-top\" alt=\"...\">\n  <div class=\"card-body\">\n    <h5 class=\"card-title\">{{todo.todoName}}</h5>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { TodoService } from '../services/todo.service';\nimport { ActivatedRoute } from '@angular/router'\n\n@Component({\n  selector: 'app-single-todo',\n  templateUrl: './single-todo.component.html',\n  styleUrls: ['./single-todo.component.css']\n})\nexport class SingleTodoComponent implements OnInit {\n\n  todo;\n  error;\n  constructor(private route: ActivatedRoute,\n              private todoService: TodoService) { }\n\n  ngOnInit(): void {\n    const id = +this.route.snapshot.params['id'];\n    this.todo = this.todoService.getTodo(id);\n    if (!this.todo){\n      this.error = \"Id incorrect\"\n    }\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FormArray, FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { Address } from 'src/app/models/address.model';\nimport { User } from 'src/app/models/user.models';\nimport { UsersService } from 'src/app/services/users.service';\n\n@Component({\n  selector: 'app-add-user',\n  templateUrl: './add-user.component.html',\n  styleUrls: ['./add-user.component.css']\n})\nexport class AddUserComponent implements OnInit {\n\n  userForm: FormGroup;\n  constructor(private formBuilder: FormBuilder,\n              private userService: UsersService,\n              private router: Router) { }\n\n  ngOnInit(): void {\n    this.initUserForm();\n  }\n\n  initUserForm(): void{\n    this.userForm = this.formBuilder.group({\n      firstname: this.formBuilder.control(\"\", [Validators.required, Validators.minLength(5)]),\n      lastname: this.formBuilder.control(\"\", [Validators.required, Validators.minLength(5)]),\n      email: this.formBuilder.control(\"\", [Validators.required, Validators.email, Validators.minLength(5)]),\n      description: this.formBuilder.control(\"\", [Validators.required, Validators.minLength(15)]),\n      dateBirth: this.formBuilder.control(\"\", Validators.required),\n      address: this.formBuilder.group({\n        street:this.formBuilder.control(\"\", Validators.required),\n        state: this.formBuilder.control(\"\", Validators.required),\n        zip: this.formBuilder.control(\"\", Validators.required),\n        city: this.formBuilder.control(\"\", Validators.required),\n      }),\n      aliases: this.formBuilder.array([]),\n    });\n  }\n\n  getAliases(): FormArray {\n    return this.userForm.get(\"aliases\") as FormArray;\n  }\n\n  addAliases(): void {\n    this.getAliases().push(this.formBuilder.control(\"\", Validators.required))\n  }\n\n  onSubmit(): void{\n    const dataUser = this.userForm.value;\n    const addresse = new Address(dataUser.street, dataUser.city, dataUser.state, dataUser.zip);\n    const alias = dataUser.aliases ? dataUser.aliases : [];\n    const newUser = new User(dataUser.firstname,\n                            dataUser.lastname,\n                            dataUser.email,\n                            addresse,\n                            dataUser.description,\n                            dataUser.dateBirth,\n                            alias\n                          );\n\n    this.userService.addUser(newUser);\n    this.router.navigate([\"users\"]);\n\n\n    //console.log(this.userForm.value);\n  }\n\n}\n","<div class=\"row\">\n  <div class=\"col-6\">\n    <h1 class=\"display-4 text-center mb-2\">Ajouter un utilisateur.</h1>\n\n    <form [formGroup]=\"userForm\" (ngSubmit)=\"onSubmit()\">\n\n      <div class=\"form-group\">\n        <label for=\"firstname\">Prenom :</label>\n        <input class=\"form-control m-1\" type=\"text\" formControlName=\"firstname\" />\n      </div>\n\n      <div class=\"form-group\">\n        <label for=\"lastname\">Nom :</label>\n        <input class=\"form-control m-1\" type=\"text\" formControlName=\"lastname\" />\n      </div>\n\n      <div class=\"form-group\">\n        <label for=\"email\">Email :</label>\n        <input class=\"form-control m-1\" type=\"email\" formControlName=\"email\" />\n      </div>\n\n      <div class=\"form-group\" formArrayName=\"aliases\">\n        <button type=\"button\" class=\"btn btn-success btn-lg\"\n        (click)=\"addAliases()\">Ajouter un Alias</button>\n        <div *ngFor=\"let alias of getAliases().controls; let i= index\">\n          <input type=\"text\" class=\"form-control m-1\" [formControlName]=i />\n        </div>\n      </div>\n\n      <div class=\"form-group\" formGroupName=\"address\">\n        <h3>Adresse</h3>\n        <div class=\"row\">\n          <div class=\"col-6\">\n            <label for=\"street\">Rue :</label>\n            <input class=\"form-control m-1\" type=\"text\" formControlName=\"street\" />\n          </div>\n\n          <div class=\"col-6\">\n            <label for=\"city\">Ville :</label>\n            <input class=\"form-control m-1\" type=\"text\" formControlName=\"city\" />\n          </div>\n        </div>\n\n        <div class=\"row\">\n          <div class=\"col-6\">\n            <label for=\"state\">Etat :</label>\n            <input class=\"form-control m-1\" type=\"text\" formControlName=\"state\" />\n          </div>\n\n          <div class=\"col-6\">\n            <label for=\"codezip\">Code Postal :</label>\n            <input class=\"form-control m-1\" type=\"text\" formControlName=\"zip\" />\n          </div>\n        </div>\n      </div>\n\n      <div class=\"form-group\">\n        <label for=\"description\">Description :</label>\n        <textarea class=\"form-control m-1\" type=\"text\" formControlName=\"description\"></textarea>\n      </div>\n\n      <div class=\"form-group\">\n        <label for=\"dateBirth\">Date de naissance :</label>\n        <input class=\"form-control m-1\" type=\"date\" formControlName=\"dateBirth\" />\n      </div>\n\n      <button type=\"submit\" [disabled]=\"userForm.invalid\" class=\"btn btn-success btn-lg\">Ajouter Utilisateur</button>\n\n    </form>\n  </div>\n</div>\n","<h1 [ngClass]=\"'classe1 classe2'\">Liste des tâches à réaliser</h1>\r\n{{today | date | uppercase }}\r\n<ul class=\"list-group\">\r\n  <li class=\"list-group-item\" *ngFor=\"let todo of todos, let i = index\">\r\n\r\n    <div [ngClass]=\"{encours:todo.todoStatus,terminee:!todo.todoStatus}\">\r\n      <a [href]=\"todo.image\">\r\n        <img [src] = \"todo.image\" />\r\n      </a>\r\n\r\n      {{ todo.todoName | lowercase }}\r\n\r\n      <button class=\"btn btn-primary\" [disabled]=\"todo.todoStatus\"\r\n      (click)=\"onChangeStatus(i)\"\r\n      >En cours</button>\r\n      <button class=\"btn btn-success\" [disabled]=\"!todo.todoStatus\"\r\n      (click)=\"onChangeStatus(i)\"\r\n      >Terminée</button>\r\n\r\n      <!-- Action de modification -->\r\n      <button class=\"btn btn-danger mr-1\" *ngIf=\"!todo.isModif\"\r\n      (click)=\"onChangeIsModif(i)\"\r\n      >Modifier</button>\r\n      <button class=\"btn btn-success mr-1\" *ngIf=\"todo.isModif\"\r\n      (click)=\"onChangeIsModif(i)\"\r\n      >Modification terminée</button>\r\n\r\n\r\n      <button class=\"btn btn-success mr-1\"\r\n      (click)=\"onView(i)\"\r\n      >En savoir plus</button>\r\n\r\n\r\n      <input *ngIf=\"todo.isModif\" class=\"form-control\" [(ngModel)]=\"todo.todoName\" />\r\n    </div>\r\n\r\n  </li>\r\n</ul>\r\n","import { Component, OnDestroy, OnInit } from \"@angular/core\";\r\nimport { Router } from \"@angular/router\";\r\nimport { Subscription } from \"rxjs\";\r\nimport { error } from \"selenium-webdriver\";\r\nimport { TodoService } from \"../services/todo.service\";\r\n\r\n\r\n@Component({\r\n  selector: 'my-todo',\r\n  templateUrl: './todo.component.html',\r\n  styleUrls: ['./todo.component.css']\r\n})\r\n\r\nexport class ToDoComponent implements OnInit, OnDestroy{\r\n  today;\r\n  todos;\r\n  todosSub: Subscription;\r\n\r\n  constructor(private todoService: TodoService,\r\n    private router: Router){\r\n\r\n  }\r\n\r\n  ngOnInit(){\r\n    this.today = this.todoService.today;\r\n    this.todosSub = this.todoService.todoSubject.subscribe(\r\n      (value: any[]) => {\r\n        this.todos = value;\r\n      },\r\n      (error) => {\r\n        console.log('Erreur : '+ error);\r\n      },\r\n      () => {\r\n        console.log(\"Observable completée \")\r\n      }\r\n    );\r\n    this.todoService.emitTodos();\r\n  }\r\n\r\n  onChangeStatus(i: number){\r\n    this.todoService.onChangeStatus(i);\r\n  }\r\n\r\n  onChangeIsModif(i){\r\n    this.todoService.onChangeIsModif(i);\r\n  }\r\n\r\n\r\n  onView(id: number){\r\n    this.router.navigate([\"single-todo\",id]);\r\n  }\r\n\r\n\r\n  ngOnDestroy() {\r\n    this.todosSub.unsubscribe();\r\n  }\r\n\r\n}\r\n","export class Todo{\r\n  todoName : string;\r\n  todoStatus : boolean = true;\r\n  description : string;\r\n  isModif: boolean = false;\r\n  image: string = \"http://placeimg.com/300/300/tech\";\r\n}\r\n","export class Address {\r\n  constructor(public street: string,\r\n              public city: string,\r\n              public state: string,\r\n              public zip: number,) {}\r\n}\r\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Todo } from 'src/app/models/todo.model';\nimport { TodoService } from 'src/app/services/todo.service';\n\n@Component({\n  selector: 'app-add-todo',\n  templateUrl: './add-todo.component.html',\n  styleUrls: ['./add-todo.component.css']\n})\nexport class AddTodoComponent implements OnInit {\n\n  todo = new Todo();\n\n  constructor(private todoService: TodoService,\n    private router: Router) { }\n\n  ngOnInit(): void {\n  }\n\n  onSubmit():void{\n    this.todoService.addTodo(this.todo);\n    this.router.navigate([\"todos\"]);\n  }\n\n}\n","<div class=\"row\">\n  <h1 class=\"display-4 text-center\">Ajouter une tâche à réaliser.</h1>\n  <div class=\"col-6\">\n\n    <form #addTodoForm=\"ngForm\">\n      <div class=\"form-group\">\n        <label for=\"\">Nom de la tâche :</label>\n        <input class=\"form-control m-1\" type=\"text\"\n        name=\"todoName\"\n        [(ngModel)] = \"todo.todoName\" required\n        />\n      </div>\n\n      <div class=\"form-group\">\n        <label for=\"\">Description de la tâche :</label>\n        <textarea class=\"form-control m-1\" name=\"description\"\n        id=\"\" cols=\"30\" rows=\"10\"\n        name=\"description\" required\n        [(ngModel)] = \"todo.description\"\n        ></textarea>\n      </div>\n\n      <div class=\"form-group\">\n        <label for=\"\">URL de Image :</label>\n        <input class=\"form-control m-1\" type=\"text\"\n        name=\"image\" required\n        [(ngModel)] = \"todo.image\"\n        />\n      </div>\n\n      <div class=\"form-group\">\n        <label for=\"\">Etat de la tâche : </label>\n        <select class=\"form-control m-1\"\n        name=\"todoStatus\" required\n        [(ngModel)] = \"todo.todoStatus\">\n          <option value=\"true\">En cours</option>\n          <option value=\"false\">Terminée</option>\n        </select>\n      </div>\n\n      <button [disabled]=\"!addTodoForm.valid\" type=\"button\" (click)=\"onSubmit()\" class=\"btn btn-success btn-lg\">Ajouter !</button>\n\n    </form>\n  </div>\n</div>\n","import { Component } from '@angular/core';\r\n\r\n\r\n@Component({\r\n  selector:'my-App',\r\n  templateUrl: './app.component.html',\r\n  styleUrls:['app.component.css']\r\n})\r\n\r\nexport class AppComponent{\r\n\r\n}\r\n","<app-header></app-header>\r\n<div class=\"container\">\r\n  <router-outlet></router-outlet>\r\n</div>\r\n","import { NgModule } from \"@angular/core\";\r\nimport { BrowserModule } from \"@angular/platform-browser\";\r\nimport { AppComponent } from \"./app.component\";\r\nimport { ToDoComponent } from \"./todo/todo.component\";\r\nimport { HeaderComponent } from './header/header.component';\r\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\r\nimport { TodoService } from \"./services/todo.service\";\r\nimport { HomeComponent } from './home/home.component';\r\nimport { NotFoundComponent } from './not-found/not-found.component';\r\nimport { SingleTodoComponent } from './single-todo/single-todo.component';\r\nimport { ContactComponent } from './contact/contact.component';\r\nimport { RouterModule, Routes } from \"@angular/router\";\r\nimport { AddTodoComponent } from './todo/add-todo/add-todo.component';\r\nimport { UsersComponent } from './users/users.component';\r\nimport { AddUserComponent } from './users/add-user/add-user.component';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { AppRoutingModule } from './app-routing.module';\r\n\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations:[\r\n    AppComponent,\r\n    ToDoComponent,\r\n    HeaderComponent,\r\n    HomeComponent,\r\n    NotFoundComponent,\r\n    SingleTodoComponent,\r\n    ContactComponent,\r\n    AddTodoComponent,\r\n    UsersComponent,\r\n    AddUserComponent,\r\n  ],\r\n  imports:[\r\n    BrowserModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    HttpClientModule,\r\n    AppRoutingModule,\r\n  ],\r\n  providers:[TodoService],\r\n  bootstrap:[AppComponent]\r\n})\r\n\r\nexport class AppModule{}\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-contact',\n  templateUrl: './contact.component.html',\n  styleUrls: ['./contact.component.css']\n})\nexport class ContactComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>contact works!</p>\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport {interval, Observable, Subscription} from 'rxjs';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit, OnDestroy {\n\n  salutationSub: Subscription;\n  secondesSub: Subscription;\n  secondes: number;\n  constructor() { }\n\n  ngOnInit(): void {\n    const salutation = new Observable((observer) => {\n      observer.next(\"hello\");\n      observer.next(\"world !\");\n      observer.complete();\n    });\n\n    const secondesObs = interval(1000);\n\n\n\n    this.secondesSub = secondesObs.subscribe(\n      (value : number) => {\n        this.secondes = value;\n      }\n    );\n  }\n\n  ngOnDestroy(){\n    this.secondesSub.unsubscribe();\n  }\n\n}\n","<nav class=\"navbar navbar-expand-lg navbar-dark bg-primary\">\n    <button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n      <span class=\"navbar-toggler-icon\"></span>\n    </button>\n    <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n      <ul class=\"navbar-nav me-auto mb-2 mb-lg-0\">\n\n        <li class=\"nav-item\">\n          <a class=\"nav-link\" routerLink=\"home\">Acceuil</a>\n        </li>\n\n        <li class=\"nav-item\">\n          <a class=\"nav-link\" routerLink=\"todos\">Mes Projets</a>\n        </li>\n\n        <li class=\"nav-item\">\n          <a class=\"nav-link\" routerLink=\"add-todo\">Ajouter un projet</a>\n        </li>\n\n        <li class=\"nav-item\">\n          <a class=\"nav-link\" routerLink=\"users\">Utilisateurs</a>\n        </li>\n\n        <li class=\"nav-item\">\n          <a class=\"nav-link\" routerLink=\"contact\">Contact</a>\n        </li>\n\n      </ul>\n      <div class=\"text-white\">\n        Vous êtes connecté depuis {{ secondes }} secondes.\n      </div>\n\n    </div>\n\n</nav>\n","import { Address } from \"./address.model\";\r\n\r\nexport class User{\r\n\r\n  constructor(public firstname: string,\r\n              public lastname: string,\r\n              public email: string,\r\n              public Addresse: Address,\r\n              public description: string,\r\n              public dateBirth: string,\r\n              public aliases?: string[],\r\n                ) { }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-not-found',\n  templateUrl: './not-found.component.html',\n  styleUrls: ['./not-found.component.css']\n})\nexport class NotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p class=\"display-1 text-center\">404</p>\n<p class=\"display-3\">Page introuvable sur notre serveur</p>\n","<a class=\"btn btn-success mt-2\" routerLink=\"/add-user\">Ajouter un utilisateur</a>\n\n<ul class=\"list-group\">\n  <li class=\"list-group-item\" *ngFor=\"let user of users\">\n    <p>Prenom : {{user.firstname}}</p>\n    <p>Nom : {{user.lastname}}</p>\n    <p>Alias : <strong *ngFor=\"let alias  of user.aliases\">{{alias}},</strong></p>\n    <p>Description : {{user.description}}</p>\n\n  </li>\n</ul>\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { User } from '../models/user.models';\nimport { UsersService } from '../services/users.service';\n\n@Component({\n  selector: 'app-users',\n  templateUrl: './users.component.html',\n  styleUrls: ['./users.component.css']\n})\nexport class UsersComponent implements OnInit, OnDestroy {\n\n  users: User[];\n  usersSubscription: Subscription\n\n  constructor(private userService: UsersService) { }\n\n  ngOnInit(): void {\n    this.usersSubscription = this.userService.usersSub.subscribe(\n      (usersRecup: User[]) => {\n        this.users = usersRecup;\n      }\n    );\n    this.userService.emitUsers();\n  }\n\n  ngOnDestroy(): void{\n    this.usersSubscription.unsubscribe();\n  }\n\n}\n","import { HttpClient } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { Subject } from \"rxjs\";\r\nimport { error } from \"selenium-webdriver\";\r\nimport { Todo } from \"../models/todo.model\";\r\n\r\n@Injectable()\r\nexport class TodoService{\r\n  today = new Date();\r\n  todos: Todo[];\r\n  todoSubject = new Subject<any[]>();\r\n\r\n\r\n  constructor(private httpClient: HttpClient){\r\n    this.getTodosFromServer();\r\n  }\r\n\r\n  emitTodos(){\r\n    this.todoSubject.next(this.todos);\r\n  }\r\n\r\n  onChangeStatus(i: number){\r\n    this.todos[i].todoStatus = !this.todos[i].todoStatus;\r\n    this.emitTodos();\r\n    this.saveTodosFromServer();\r\n  }\r\n\r\n  onChangeIsModif(i){\r\n    this.todos[i].isModif = !this.todos[i].isModif;\r\n    this.emitTodos();\r\n    this.saveTodosFromServer();\r\n  }\r\n\r\n  getTodo(index: number){\r\n    if (this.todos[index]){\r\n      return this.todos[index]\r\n    }\r\n    return false\r\n  }\r\n\r\n\r\n  addTodo(todo: Todo): void {\r\n    this.todos.unshift(todo);\r\n    this.emitTodos();\r\n    this.saveTodosFromServer();\r\n  }\r\n\r\n\r\n  saveTodosFromServer(): void {\r\n    this.httpClient.put(\"https://todo-list-app-26ad4-default-rtdb.europe-west1.firebasedatabase.app/todos.json\",\r\n     this.todos).subscribe(\r\n       () => {\r\n         console.log(\"Données enregistrée avec succès\");\r\n       },\r\n       (error) => {\r\n         console.log(\"Erreur de sauvegarde : \" + error);\r\n       }\r\n     )\r\n  }\r\n\r\n\r\n  getTodosFromServer(): void {\r\n    this.httpClient.get<Todo[]>(\"https://todo-list-app-26ad4-default-rtdb.europe-west1.firebasedatabase.app/todos.json\")\r\n      .subscribe(\r\n        (todoRecup: Todo[]) => {\r\n          this.todos = todoRecup;\r\n          this.emitTodos();\r\n        },\r\n        (error) => {\r\n          console.log(\"Erreur de récupération des données : \" + error);\r\n        },\r\n        () => {\r\n          console.log(\"Récupération des données terminée\");\r\n\r\n        }\r\n      );\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ToDoComponent } from './todo/todo.component';\nimport { HomeComponent } from './home/home.component';\nimport { ContactComponent } from './contact/contact.component';\nimport { UsersComponent } from './users/users.component';\nimport { AddUserComponent } from './users/add-user/add-user.component';\nimport { AddTodoComponent } from './todo/add-todo/add-todo.component';\nimport { SingleTodoComponent } from './single-todo/single-todo.component';\nimport { NotFoundComponent } from './not-found/not-found.component';\nimport { RouterModule, Routes } from '@angular/router';\n\n\nconst ROUTES : Routes = [\n  {path: 'home', component:HomeComponent},\n  {path: 'todos', component:ToDoComponent},\n  {path: 'not-found', component:NotFoundComponent},\n  {path: 'contact', component:ContactComponent},\n  {path: 'users', component:UsersComponent},\n  {path: 'add-user', component:AddUserComponent},\n  {path: 'add-todo', component:AddTodoComponent},\n  {path: 'single-todo/:id', component:SingleTodoComponent},\n  {path: '', component:HomeComponent},\n  {path: '**', pathMatch:'full', redirectTo:'not-found'},\n]\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n    RouterModule.forRoot(ROUTES)\n  ],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}